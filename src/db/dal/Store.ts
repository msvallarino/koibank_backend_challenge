import { PaginateOptions } from 'mongoose';
import Store, { IStore, paginationCustomLabels } from '../models/Store';

export type QueryOptions = {
  page?: number;
  limit?: number;
};

// Generated by https://quicktype.io

export interface GetAllResponse {
  stores: IStore[];
  total: number;
  limit: number;
  pages: number;
  page: number;
  pagingCounter: number;
  hasPrevPage: boolean;
  hasNextPage: boolean;
  prevPage: number;
  nextPage: number;
}

export const getAll = async ({ page, limit }: QueryOptions): Promise<GetAllResponse> => {
  const paginateOptions: PaginateOptions = { page, limit, customLabels: paginationCustomLabels };
  const storesPaginated = await Store.paginate({}, paginateOptions);
  return storesPaginated as unknown as GetAllResponse;
};

export const create = async (newStore: IStore): Promise<IStore> => {
  const store = new Store(newStore);
  await Store.create(store);
  return store;
};

export const getTotalDocuments = async (): Promise<number> => {
  return Store.countDocuments();
};

export const createManyStores = async (newStores: IStore[]): Promise<IStore[]> => {
  return Store.insertMany(newStores);
};
